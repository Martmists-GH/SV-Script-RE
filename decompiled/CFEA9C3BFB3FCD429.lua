---@alias CFEA9C3BFB3FCD429 main_util_CompositionCamera

---@class main_util_CompositionCamera
CFEA9C3BFB3FCD429 = L15_1()
CFEA9C3BFB3FCD429.new = {}
CFEA9C3BFB3FCD429.__name__ = "CFEA9C3BFB3FCD429"

function CFEA9C3BFB3FCD429.S1870754F68D7E98F(A0_2, A1_2, A2_2, A3_2, A4_2)  -- CalcAngle
  local L5_2, L6_2, L7_2, L8_2, L9_2, L10_2, L11_2, L12_2, L13_2, L14_2, L15_2, L16_2, L17_2, L18_2, L19_2, L20_2, L21_2, L22_2, L23_2, L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2, L31_2, L32_2, L33_2
  L5_2 = CFEA9C3BFB3FCD429.S424E3EA0446070E7(A2_2)  -- CalcXFov
  L5_2 = L5_2 / 2
  L6_2 = A1_2[2]
  L6_2 = L6_2 * 2
  L7_2 = 1
  L6_2 = L7_2 - L6_2
  L6_2 = L6_2 * -1
  L7_2 = {}
  L8_2 = L10_1.math.tan
  L9_2 = A1_2[1]
  L9_2 = L9_2 * 2
  L10_2 = 1
  L9_2 = L10_2 - L9_2
  L9_2 = L5_2 * L9_2
  L8_2 = L8_2(L9_2)
  L8_2 = L8_2 * A3_2
  L8_2 = -L8_2
  L9_2 = L10_1.math
  L9_2 = L9_2.tan
  L10_2 = A2_2 / 2
  L10_2 = L10_2 * L6_2
  L9_2 = L9_2(L10_2)
  L9_2 = L9_2 * A3_2
  L9_2 = -L9_2
  L10_2 = 0
  L7_2[1] = L8_2
  L7_2[2] = L9_2
  L7_2[3] = L10_2
  L8_2 = {}
  L9_2 = L7_2[1]
  L10_2 = L7_2[2]
  L11_2 = L7_2[3]
  L8_2[1] = L9_2
  L8_2[2] = L10_2
  L8_2[3] = L11_2
  L9_2 = L8_2[3]
  L9_2 = L9_2 - A3_2
  L8_2[3] = L9_2
  L10_2 = A4_2
  L9_2 = A4_2.f1087DA78
  L9_2(L10_2)
  L10_2 = A4_2
  L9_2 = A4_2.fCA247E7A
  L11_2 = L7_2[1]
  L12_2 = L7_2[2]
  L13_2 = L7_2[3]
  L9_2, L10_2, L11_2 = L9_2(L10_2, L11_2, L12_2, L13_2)
  L12_2 = {}
  L13_2 = L9_2
  L14_2 = L10_2
  L15_2 = L11_2
  L12_2[1] = L13_2
  L12_2[2] = L14_2
  L12_2[3] = L15_2
  L7_2 = L12_2
  L13_2 = A4_2
  L12_2 = A4_2.fCA247E7A
  L14_2 = L8_2[1]
  L15_2 = L8_2[2]
  L16_2 = L8_2[3]
  L12_2, L13_2, L14_2 = L12_2(L13_2, L14_2, L15_2, L16_2)
  L15_2 = {}
  L16_2 = L12_2
  L17_2 = L13_2
  L18_2 = L14_2
  L15_2[1] = L16_2
  L15_2[2] = L17_2
  L15_2[3] = L18_2
  L8_2 = L15_2
  L16_2 = A4_2
  L15_2 = A4_2.fCA247E7A
  L17_2 = 0
  L18_2 = 1
  L19_2 = 0
  L15_2, L16_2, L17_2 = L15_2(L16_2, L17_2, L18_2, L19_2)
  L18_2 = {}
  L19_2 = L15_2
  L20_2 = L16_2
  L21_2 = L17_2
  L18_2[1] = L19_2
  L18_2[2] = L20_2
  L18_2[3] = L21_2
  L19_2 = L15_1
  L19_2 = L19_2()
  L20_2 = {}
  L21_2 = A0_2[1]
  L22_2 = L8_2[1]
  L21_2 = L21_2 - L22_2
  L22_2 = A0_2[2]
  L23_2 = L8_2[2]
  L22_2 = L22_2 - L23_2
  L23_2 = A0_2[3]
  L24_2 = L8_2[3]
  L23_2 = L23_2 - L24_2
  L20_2[1] = L21_2
  L20_2[2] = L22_2
  L20_2[3] = L23_2
  L19_2.Translation = L20_2
  L20_2 = {}
  L21_2 = A0_2[1]
  L22_2 = L7_2[1]
  L21_2 = L21_2 - L22_2
  L22_2 = A0_2[2]
  L23_2 = L7_2[2]
  L22_2 = L22_2 - L23_2
  L23_2 = A0_2[3]
  L24_2 = L7_2[3]
  L23_2 = L23_2 - L24_2
  L20_2[1] = L21_2
  L20_2[2] = L22_2
  L20_2[3] = L23_2
  L21_2 = L18_2
  if nil == L20_2 then
    L22_2 = {}
    L23_2 = 0
    L24_2 = 0
    L25_2 = 0
    L22_2[1] = L23_2
    L22_2[2] = L24_2
    L22_2[3] = L25_2
    L20_2 = L22_2
  end
  if nil == L18_2 then
    L22_2 = {}
    L23_2 = 0
    L24_2 = 1
    L25_2 = 0
    L22_2[1] = L23_2
    L22_2[2] = L24_2
    L22_2[3] = L25_2
    L21_2 = L22_2
  end
  L22_2 = L20_2
  L23_2 = L21_2
  L24_2 = cD5675BA5
  L24_2 = L24_2.fB5706664
  L25_2 = A0_2[1]
  L26_2 = L8_2[1]
  L25_2 = L25_2 - L26_2
  L26_2 = A0_2[2]
  L27_2 = L8_2[2]
  L26_2 = L26_2 - L27_2
  L27_2 = A0_2[3]
  L28_2 = L8_2[3]
  L27_2 = L27_2 - L28_2
  L28_2 = L22_2[1]
  L29_2 = L22_2[2]
  L30_2 = L22_2[3]
  L31_2 = L23_2[1]
  L32_2 = L23_2[2]
  L33_2 = L23_2[3]
  L24_2 = L24_2(L25_2, L26_2, L27_2, L28_2, L29_2, L30_2, L31_2, L32_2, L33_2)
  L19_2.Rotation = L24_2
  L24_2 = L19_2.Rotation
  L25_2 = L24_2
  L24_2 = L24_2.f1087DA78
  L24_2(L25_2)
  L19_2.Fovy = A2_2
  L19_2.Roll = 0
  L24_2 = {}
  L25_2 = A0_2[1]
  L26_2 = L7_2[1]
  L25_2 = L25_2 - L26_2
  L26_2 = A0_2[2]
  L27_2 = L7_2[2]
  L26_2 = L26_2 - L27_2
  L27_2 = A0_2[3]
  L28_2 = L7_2[3]
  L27_2 = L27_2 - L28_2
  L24_2[1] = L25_2
  L24_2[2] = L26_2
  L24_2[3] = L27_2
  L19_2.Target = L24_2
  L19_2.UpVec = L18_2
  return L19_2
end

function CFEA9C3BFB3FCD429.S512B895F12769CF2(A0_2, A1_2, A2_2, A3_2, A4_2, A5_2)  -- CalcAngleEx
  local L6_2, L7_2, L8_2, L9_2, L10_2, L11_2, L12_2, L13_2, L14_2, L15_2, L16_2, L17_2, L18_2, L19_2, L20_2, L21_2, L22_2, L23_2, L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2, L31_2, L32_2, L33_2, L34_2
  L6_2 = {}
  L7_2 = 0
  L8_2 = 0
  L6_2[1] = L7_2
  L6_2[2] = L8_2
  L7_2 = {}
  L8_2 = 1
  L9_2 = 1
  L7_2[1] = L8_2
  L7_2[2] = L9_2
  if nil ~= A5_2 then
    L8_2 = A5_2.pointLimitMin
    if nil ~= L8_2 then
      L6_2 = A5_2.pointLimitMin
    end
  end
  if nil ~= A5_2 then
    L8_2 = A5_2.pointLimitMax
    if nil ~= L8_2 then
      L7_2 = A5_2.pointLimitMax
    end
  end
  L9_2 = A3_2
  L8_2 = A3_2.fCA247E7A
  L10_2 = 1
  L11_2 = 0
  L12_2 = 0
  L8_2, L9_2, L10_2 = L8_2(L9_2, L10_2, L11_2, L12_2)
  L11_2 = {}
  L12_2 = L8_2
  L13_2 = L9_2
  L14_2 = L10_2
  L11_2[1] = L12_2
  L11_2[2] = L13_2
  L11_2[3] = L14_2
  L13_2 = A3_2
  L12_2 = A3_2.fCA247E7A
  L14_2 = 0
  L15_2 = 1
  L16_2 = 0
  L12_2, L13_2, L14_2 = L12_2(L13_2, L14_2, L15_2, L16_2)
  L15_2 = {}
  L16_2 = L12_2
  L17_2 = L13_2
  L18_2 = L14_2
  L15_2[1] = L16_2
  L15_2[2] = L17_2
  L15_2[3] = L18_2
  L17_2 = A3_2
  L16_2 = A3_2.fCA247E7A
  L18_2 = 0
  L19_2 = 0
  L20_2 = 1
  L16_2, L17_2, L18_2 = L16_2(L17_2, L18_2, L19_2, L20_2)
  L19_2 = c7F951E2A
  L19_2 = L19_2.f94CF9F47
  L20_2 = L16_2
  L21_2 = L17_2
  L22_2 = L18_2
  L23_2 = A0_2[1]
  L24_2 = A0_2[2]
  L25_2 = A0_2[3]
  L19_2 = L19_2(L20_2, L21_2, L22_2, L23_2, L24_2, L25_2)
  L20_2 = L26_1.new
  L20_2 = L20_2()
  L21_2 = 0
  while true do
    L22_2 = A4_2.length
    if not (L21_2 < L22_2) then
      break
    end
    L22_2 = A4_2[L21_2]
    L21_2 = L21_2 + 1
    L24_2 = L19_2
    L23_2 = L19_2.f6AC439C3
    L25_2 = L22_2[1]
    L26_2 = L22_2[2]
    L27_2 = L22_2[3]
    L23_2, L24_2, L25_2 = L23_2(L24_2, L25_2, L26_2, L27_2)
    L27_2 = L20_2
    L26_2 = L20_2.push
    L28_2 = L16_1
    L29_2 = {}
    L30_2 = {}
    L30_2.basePos = true
    L30_2.pos = true
    L30_2.isFront = true
    L30_2.len = true
    L29_2.__fields__ = L30_2
    L29_2.basePos = L22_2
    L30_2 = {}
    L31_2 = L23_2
    L32_2 = L24_2
    L33_2 = L25_2
    L30_2[1] = L31_2
    L30_2[2] = L32_2
    L30_2[3] = L33_2
    L29_2.pos = L30_2
    L31_2 = L19_2
    L30_2 = L19_2.f82FDCD56
    L32_2 = L22_2[1]
    L33_2 = L22_2[2]
    L34_2 = L22_2[3]
    L30_2 = L30_2(L31_2, L32_2, L33_2, L34_2)
    L29_2.isFront = L30_2
    L29_2.len = 0
    L28_2, L29_2, L30_2, L31_2, L32_2, L33_2, L34_2 = L28_2(L29_2)
    L26_2(L27_2, L28_2, L29_2, L30_2, L31_2, L32_2, L33_2, L34_2)
  end
  L22_2 = CFEA9C3BFB3FCD429
  L22_2 = L22_2.S64ECD5312207DBB5
  L23_2 = A0_2
  L24_2 = CFEA9C3BFB3FCD429
  L24_2 = L24_2.S424E3EA0446070E7
  L25_2 = A2_2
  L24_2 = L24_2(L25_2)
  L25_2 = A1_2[1]
  L26_2 = L20_2
  L27_2 = L19_2
  L28_2 = L15_2
  L29_2 = L11_2
  L30_2 = L6_2[1]
  L31_2 = L7_2[1]
  L22_2 = L22_2(L23_2, L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2, L31_2)
  L23_2 = CFEA9C3BFB3FCD429
  L23_2 = L23_2.S64ECD5312207DBB5
  L24_2 = A0_2
  L25_2 = A2_2
  L26_2 = A1_2[2]
  L27_2 = L20_2
  L28_2 = L19_2
  L29_2 = {}
  L30_2 = L11_2[1]
  L30_2 = -L30_2
  L31_2 = L11_2[2]
  L31_2 = -L31_2
  L32_2 = L11_2[3]
  L32_2 = -L32_2
  L29_2[1] = L30_2
  L29_2[2] = L31_2
  L29_2[3] = L32_2
  L30_2 = {}
  L31_2 = L15_2[1]
  L31_2 = -L31_2
  L32_2 = L15_2[2]
  L32_2 = -L32_2
  L33_2 = L15_2[3]
  L33_2 = -L33_2
  L30_2[1] = L31_2
  L30_2[2] = L32_2
  L30_2[3] = L33_2
  L31_2 = L6_2[2]
  L32_2 = L7_2[2]
  L23_2 = L23_2(L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2, L31_2, L32_2)
  
  function L24_2()
    local L0_3, L1_3, L2_3
    L0_3 = nil
    L1_3 = L22_2.adjustLen
    L2_3 = L23_2.adjustLen
    if L1_3 > L2_3 then
      L0_3 = L22_2.adjustLen
    else
      L0_3 = L23_2.adjustLen
    end
    return L0_3
  end
  
  L24_2 = L24_2()
  if nil ~= A5_2 then
    L25_2 = A5_2.minDistance
    if nil ~= L25_2 then
      L25_2 = A5_2.minDistance
      if L24_2 < L25_2 then
        L24_2 = A5_2.minDistance
      end
    end
  end
  if nil ~= A5_2 then
    L25_2 = A5_2.maxDistance
    if nil ~= L25_2 then
      L25_2 = A5_2.maxDistance
      if L24_2 > L25_2 then
        L24_2 = A5_2.maxDistance
      end
    end
  end
  L25_2 = CFEA9C3BFB3FCD429
  L25_2 = L25_2.S1870754F68D7E98F
  L26_2 = A0_2
  L27_2 = A1_2
  L28_2 = A2_2
  L29_2 = L24_2
  L30_2 = A3_2
  return L25_2(L26_2, L27_2, L28_2, L29_2, L30_2)
end

function CFEA9C3BFB3FCD429.S424E3EA0446070E7(A0_2)  -- CalcXFov
  return L10_1.math.atan2(960.0, 540.0 / L10_1.math.tan(A0_2 / 2)) * 2
end

function CFEA9C3BFB3FCD429.S64ECD5312207DBB5(A0_2, A1_2, A2_2, A3_2, A4_2, A5_2, A6_2, A7_2, A8_2)  -- CalcAxisLength
  local L9_2, L10_2, L11_2, L12_2, L13_2, L14_2, L15_2, L16_2, L17_2, L18_2, L19_2, L20_2, L21_2, L22_2, L23_2, L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2
  L9_2 = cFC370E84
  L9_2 = L9_2.fE3C8AFD1
  L10_2 = A0_2[1]
  L11_2 = A0_2[2]
  L12_2 = A0_2[3]
  L13_2 = A5_2[1]
  L14_2 = A5_2[2]
  L15_2 = A5_2[3]
  L9_2 = L9_2(L10_2, L11_2, L12_2, L13_2, L14_2, L15_2)
  L10_2 = c7F951E2A
  L10_2 = L10_2.f94CF9F47
  L11_2 = A6_2[1]
  L12_2 = A6_2[2]
  L13_2 = A6_2[3]
  L14_2 = A0_2[1]
  L15_2 = A0_2[2]
  L16_2 = A0_2[3]
  L10_2 = L10_2(L11_2, L12_2, L13_2, L14_2, L15_2, L16_2)
  L11_2 = 0
  while true do
    L12_2 = A3_2.length
    if not (L11_2 < L12_2) then
      break
    end
    L12_2 = A3_2[L11_2]
    L11_2 = L11_2 + 1
    L13_2 = L12_2.pos
    L15_2 = L9_2
    L14_2 = L9_2.fAA865F85
    L16_2 = L13_2[1]
    L17_2 = L13_2[2]
    L18_2 = L13_2[3]
    L14_2 = L14_2(L15_2, L16_2, L17_2, L18_2)
    L15_2 = L12_2.pos
    L17_2 = L10_2
    L16_2 = L10_2.f82FDCD56
    L18_2 = L15_2[1]
    L19_2 = L15_2[2]
    L20_2 = L15_2[3]
    L16_2 = L16_2(L17_2, L18_2, L19_2, L20_2)
    if not L16_2 then
      L14_2 = L14_2 * -1
    end
    L12_2.len = L14_2
  end
  L12_2 = A3_2[0]
  L13_2 = A3_2[0]
  L14_2 = 1
  L15_2 = A3_2.length
  while L14_2 < L15_2 do
    L14_2 = L14_2 + 1
    L16_2 = L14_2 - 1
    L17_2 = A3_2[L16_2]
    L17_2 = L17_2.len
    L18_2 = L12_2.len
    if L17_2 < L18_2 then
      L12_2 = A3_2[L16_2]
    end
    L17_2 = A3_2[L16_2]
    L17_2 = L17_2.len
    L18_2 = L13_2.len
    if L17_2 > L18_2 then
      L13_2 = A3_2[L16_2]
    end
  end
  L16_2 = -1
  L17_2 = -1
  L18_2 = 0
  L19_2 = 0
  if A7_2 < A2_2 then
    L20_2 = L12_2.len
    L21_2 = -0.001
    if L20_2 < L21_2 then
      L20_2 = L12_2.len
      L21_2 = A2_2 - A7_2
      L20_2 = L20_2 / L21_2
      L16_2 = L20_2 * -1
    end
  elseif A2_2 < A7_2 then
    L20_2 = L12_2.len
    L21_2 = 0.001
    if L20_2 > L21_2 then
      L20_2 = L12_2.len
      L21_2 = A7_2 - A2_2
      L16_2 = L20_2 / L21_2
    end
  end
  L20_2 = L13_2.len
  L21_2 = L12_2.len
  L20_2 = L20_2 - L21_2
  L20_2 = L20_2 / L16_2
  L18_2 = L20_2 + A7_2
  if A8_2 < A2_2 then
    L20_2 = L13_2.len
    L21_2 = -0.001
    if L20_2 < L21_2 then
      L20_2 = L13_2.len
      L21_2 = A2_2 - A8_2
      L20_2 = L20_2 / L21_2
      L17_2 = L20_2 * -1
    end
  elseif A2_2 < A8_2 then
    L20_2 = L13_2.len
    L21_2 = 0.001
    if L20_2 > L21_2 then
      L20_2 = L13_2.len
      L21_2 = A8_2 - A2_2
      L17_2 = L20_2 / L21_2
    end
  end
  L20_2 = L13_2.len
  L21_2 = L12_2.len
  L20_2 = L20_2 - L21_2
  L20_2 = L20_2 / L17_2
  L19_2 = A8_2 - L20_2
  L20_2 = 0
  L21_2 = 0
  L22_2 = false
  if L16_2 < 0 then
    L22_2 = false
  elseif L17_2 < 0 then
    L22_2 = true
  elseif L16_2 < L17_2 and A8_2 > L18_2 then
    L22_2 = true
  elseif L16_2 > L17_2 and A7_2 < L19_2 then
    L22_2 = false
  elseif L16_2 < L17_2 then
    L22_2 = false
  else
    L22_2 = true
  end
  if L22_2 then
    L23_2 = L10_1.math
    L23_2 = L23_2.abs
    L24_2 = -L16_2
    L24_2 = L24_2 / 2
    L25_2 = L10_1.math
    L25_2 = L25_2.tan
    L26_2 = A1_2 / 2
    L25_2 = L25_2(L26_2)
    L24_2 = L24_2 / L25_2
    L23_2 = L23_2(L24_2)
    L20_2 = L23_2
    L23_2 = CFEA9C3BFB3FCD429
    L23_2 = L23_2.S51D436012A7169D1
    L24_2 = L16_2
    L25_2 = A1_2
    L26_2 = A2_2
    L27_2 = A7_2
    L28_2 = A4_2
    L29_2 = A6_2
    L30_2 = L12_2
    L23_2 = L23_2(L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2)
    L21_2 = L23_2
  else
    L23_2 = L10_1.math
    L23_2 = L23_2.abs
    L24_2 = -L17_2
    L24_2 = L24_2 / 2
    L25_2 = L10_1.math
    L25_2 = L25_2.tan
    L26_2 = A1_2 / 2
    L25_2 = L25_2(L26_2)
    L24_2 = L24_2 / L25_2
    L23_2 = L23_2(L24_2)
    L20_2 = L23_2
    L23_2 = CFEA9C3BFB3FCD429
    L23_2 = L23_2.S51D436012A7169D1
    L24_2 = L17_2
    L25_2 = A1_2
    L26_2 = A2_2
    L27_2 = A8_2
    L28_2 = A4_2
    L29_2 = A6_2
    L30_2 = L13_2
    L23_2 = L23_2(L24_2, L25_2, L26_2, L27_2, L28_2, L29_2, L30_2)
    L21_2 = L23_2
  end
  L23_2 = L16_1
  L24_2 = {}
  L25_2 = {}
  L25_2.cameraLen = true
  L25_2.adjustLen = true
  L24_2.__fields__ = L25_2
  L24_2.cameraLen = L20_2
  L25_2 = L10_1.math
  L25_2 = L25_2.abs
  L26_2 = -L21_2
  L26_2 = L26_2 / 2
  L27_2 = L10_1.math
  L27_2 = L27_2.tan
  L28_2 = A1_2 / 2
  L27_2 = L27_2(L28_2)
  L26_2 = L26_2 / L27_2
  L25_2 = L25_2(L26_2)
  L24_2.adjustLen = L25_2
  return L23_2(L24_2)
end

function CFEA9C3BFB3FCD429.S51D436012A7169D1(A0_2, A1_2, A2_2, A3_2, A4_2, A5_2, A6_2)  -- AdjustLimitPos
  local L7_2, L8_2, L9_2, L10_2, L11_2, L12_2, L13_2
  if 0 == A0_2 then
    L7_2 = 0
    return L7_2
  end
  L7_2 = A6_2.basePos
  L9_2 = A4_2
  L8_2 = A4_2.fA545CF6E
  L10_2 = L7_2[1]
  L11_2 = L7_2[2]
  L12_2 = L7_2[3]
  L8_2 = L8_2(L9_2, L10_2, L11_2, L12_2)
  L9_2 = L10_1.math
  L9_2 = L9_2.abs
  L10_2 = L8_2
  L9_2 = L9_2(L10_2)
  L10_2 = 0.001
  if L9_2 < L10_2 then
    return A0_2
  end
  L9_2 = L10_1.math
  L9_2 = L9_2.abs
  L10_2 = A3_2 - 0.5
  L9_2 = L9_2(L10_2)
  L9_2 = L9_2 * A0_2
  L9_2 = L9_2 / 2
  L10_2 = A6_2.isFront
  if L10_2 then
    L10_2 = L10_1.math
    L10_2 = L10_2.abs
    L11_2 = -A0_2
    L11_2 = L11_2 / 2
    L12_2 = L10_1.math
    L12_2 = L12_2.tan
    L13_2 = A1_2 / 2
    L12_2 = L12_2(L13_2)
    L11_2 = L11_2 / L12_2
    L10_2 = L10_2(L11_2)
    L10_2 = L8_2 / L10_2
    L10_2 = L10_2 * L9_2
    L10_2 = L10_2 * 2
    L10_2 = L10_2 * 1.5
    A0_2 = A0_2 + L10_2
  else
    L10_2 = L10_1.math
    L10_2 = L10_2.abs
    L11_2 = -A0_2
    L11_2 = L11_2 / 2
    L12_2 = L10_1.math
    L12_2 = L12_2.tan
    L13_2 = A1_2 / 2
    L12_2 = L12_2(L13_2)
    L11_2 = L11_2 / L12_2
    L10_2 = L10_2(L11_2)
    L10_2 = L10_2 + L8_2
    L10_2 = L8_2 / L10_2
    L10_2 = L10_2 * L9_2
    L10_2 = L10_2 * 2
    L10_2 = L10_2 * 1.5
    A0_2 = A0_2 - L10_2
  end
  return A0_2
end
